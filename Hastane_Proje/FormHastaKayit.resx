<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>